---

services:
  postgresql:
    image: docker.io/library/postgres:16.4
    container_name: ${AUTHENTIK_PG_CONTAINERNAME}
    restart: unless-stopped
    env_file:
      - ../../.env  # Global env file
      - .env     # Service-specific env file
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U "${AUTHENTIK_PG_USER:-authentik}"']
      start_period: 30s
      interval: 30s
      retries: 5
      timeout: 10s
    volumes:
      - authentik_authentik_pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${AUTHENTIK_PG_USER:-authentik}
      - POSTGRES_PASSWORD=${AUTHENTIK_PG_PASSWORD:?error}
      - POSTGRES_DB=${AUTHENTIK_PG_DB:-authentik}
      - TZ=${TZ:-UTC}
    networks:
      - proxy
  redis:
    image: docker.io/library/redis:7.4.0
    container_name: ${AUTHENTIK_REDIS_CONTAINERNAME}
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    env_file:
      - ../../.env  # Global env file
      - .env     # Service-specific env file
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - authentik_authentik_redis:/data
    networks:
      - proxy
  server:
    image: ghcr.io/goauthentik/server:2025.4.1
    container_name: ${AUTHENTIK_SERVER_CONTAINERNAME}
    restart: unless-stopped
    command: server
    env_file:
      - ../../.env  # Global env file
      - .env     # Service-specific env file
    environment:
      - AUTHENTIK_REDIS__HOST=${AUTHENTIK_REDIS_CONTAINERNAME}
      - AUTHENTIK_POSTGRESQL__HOST=${AUTHENTIK_PG_CONTAINERNAME}
      - AUTHENTIK_POSTGRESQL__USER=${AUTHENTIK_PG_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME=${AUTHENTIK_PG_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_PG_PASSWORD:?error}
      # (Required)  To generate a secret key run the following command:
      #             echo $(openssl rand -base64 32)
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY:?error}
      # (Optional)  Enable Error Reporting
      # - AUTHENTIK_ERROR_REPORTING__ENABLED=${AUTHENTIK_ERROR_REPORTING:-false}
      # (Optional)  Enable Email Sending
      - AUTHENTIK_EMAIL__HOST=${EMAIL_HOST:?error}
      - AUTHENTIK_EMAIL__PORT=${EMAIL_PORT:-25}
      - AUTHENTIK_EMAIL__USERNAME=${EMAIL_USERNAME:?error}
      - AUTHENTIK_EMAIL__PASSWORD=${EMAIL_PASSWORD:?error}
      - AUTHENTIK_EMAIL__USE_TLS=${EMAIL_USE_TLS:-false}
      - AUTHENTIK_EMAIL__USE_SSL=${EMAIL_USE_SSL:-false}
      - AUTHENTIK_EMAIL__TIMEOUT=${EMAIL_TIMEOUT:-10}
      - AUTHENTIK_EMAIL__FROM=${EMAIL_FROM:?error}
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    ports:
      - 9148:9000
      - 9448:9443
    labels:
      - traefik.enable=true
      - traefik.http.routers.authentik.rule=Host(`${AUTHENTIK_SUBDOMAIN}.${DEFAULT_DOMAIN}`)
      - traefik.http.routers.authentik.entrypoints=https
      - traefik.http.routers.authentik.tls=true
      - traefik.http.routers.authentik.service=authentik
      - traefik.http.services.authentik.loadbalancer.server.port=9000
    depends_on:
      - postgresql
      - redis
    networks:
      - proxy
  worker:
    image: ghcr.io/goauthentik/server:2025.4.1
    container_name: ${AUTHENTIK_WORKER_CONTAINERNAME}
    command: worker
    env_file:
      - ../../.env  # Global env file
      - .env     # Service-specific env file
    environment:
      - AUTHENTIK_REDIS__HOST=${AUTHENTIK_REDIS_CONTAINERNAME}
      - AUTHENTIK_POSTGRESQL__HOST=${AUTHENTIK_PG_CONTAINERNAME}
      - AUTHENTIK_POSTGRESQL__USER=${AUTHENTIK_PG_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME=${AUTHENTIK_PG_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${AUTHENTIK_PG_PASSWORD:?error}
      # (Required)  To generate a secret key run the following command:
      #             echo $(openssl rand -base64 32)
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY:?error}
      # (Optional)  Enable Error Reporting
      # - AUTHENTIK_ERROR_REPORTING__ENABLED=${AUTHENTIK_ERROR_REPORTING:-false}
      # (Optional)  Enable Email Sending
      - AUTHENTIK_EMAIL__HOST=${EMAIL_HOST:?error}
      - AUTHENTIK_EMAIL__PORT=${EMAIL_PORT:-25}
      - AUTHENTIK_EMAIL__USERNAME=${EMAIL_USERNAME:?error}
      - AUTHENTIK_EMAIL__PASSWORD=${EMAIL_PASSWORD:?error}
      - AUTHENTIK_EMAIL__USE_TLS=${EMAIL_USE_TLS:-false}
      - AUTHENTIK_EMAIL__USE_SSL=${EMAIL_USE_SSL:-false}
      - AUTHENTIK_EMAIL__TIMEOUT=${EMAIL_TIMEOUT:-10}
      - AUTHENTIK_EMAIL__FROM=${EMAIL_FROM:?error}
    # (Optional)  When using the docker socket integration
    #             See more for the docker socket integration here:
    #             https://goauthentik.io/docs/outposts/integrations/docker
    # user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    depends_on:
      - postgresql
      - redis
    restart: unless-stopped
    networks:
      - proxy

volumes:
  authentik_authentik_pg_data:
    external: true
  authentik_authentik_redis:
    external: true

networks:
  proxy:
    external: true
